{"version":3,"sources":["api/api.js","utils/objectHelper.js","Redux/support_reducer.ts","Components/Main/Main/Main.module.css","Components/Profile/Profile.module.css","Components/End/End.module.css","Components/Packs/OneTypePack/OneTypePack.module.css","Components/Login/Login.module.css","Components/common/Preloader/preloader.module.css","Components/NavBar/NavBar.module.css","Components/Packs/Packs.module.css","Components/NavBar/NavBar.jsx","Redux/Main_reducer.js","Components/Main/Post/Post.jsx","Components/Main/Post/PostContainer.jsx","Components/Main/Main/Main.jsx","Components/Profile/Profile.jsx","Components/End/End.jsx","Components/Packs/OneTypePack/OneTypePack.jsx","Components/Packs/Packs.jsx","Components/Header/Header.jsx","Redux/auth_reducer.ts","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","Redux/app_reducer.ts","Redux/Packs_reducer.js","Redux/redux-store.ts","hoc/LazyFunctoin.js","App.js","index.js","Components/common/FormsControls/FormsControls.js","utils/validators/validator.js","Components/common/FormsControls/FormsControls.module.css","assets/images/preloader.svg","Components/common/Preloader/preloader.js","Components/Main/Post/Post.module.css","Components/Header/Header.module.css","Redux/Galerey_reducer.ts"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","galleryProfile","authAPI","me","login","email","password","rememberMe","captcha","logout","profileAPI","savePhoto","photoFile","formData","FormData","append","put","saveProfile","profile","updateStatus","status","id","getStatus","securityAPI","getCaptchaUrl","updateObjectInArray","items","itemId","objectPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","toggleIsFetching","requestUsers","page","dispatch","getState","a","totalCount","count","_followUnfollowFlow","apiMethod","actionCreator","resultCode","bind","supportReducer","state","action","followed","filter","module","exports","Nav","className","s","nav","item","to","activeClassName","active","ADD_COMMENT","UPDATE_COMMENT_TEXT","Top","name","sr","text","BlockPost","mainReducer","newcomment","stateCopy","texariacomment","maxLength25","maxLengthCreator","Post","props","prof","src","PostsReduxForm","reduxForm","form","handleSubmit","onPostChang","addComments","PostsElements","onAddComments","Field","component","Textarea","placeholder","validata","required","PostsContainer","connect","MainPage","comment","onPostChangeActCreator","Main","content","Profile","End","end","Packi","pack","href","link","OnePack","PackModule","Pack","p","linkdisk","Packs","Header","header","isAuth","onClick","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","username","captchaUrl","setAuthUserData","payload","setCaptcha","getUserAuthData","authReducer","HeaderContain","this","React","Component","auth","LoginReduxForm","error","onSubmit","createField","Input","formSummaryError","url","message","messages","length","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","linkdik","packsReducer","RootReducer","combineReducers","GalleryPage","GalleryReducer","SupportPage","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","fallback","SupportContainer","lazy","GalleryContainer","App","errorInfo","console","log","initializeApp","exact","path","render","AppContainer","promise","Promise","all","LastFrontApp","ReactDOM","document","getElementById","input","meta","formControl","hasErrorZeroLength","touched","validators","validate","value","maxlength","Preloader","preloader","ADD_IMG","CHANGE_PHOTO","DELETE_POST","UPDATE_SRC","SET_USER_PROFILE","SET_USER_STATUS","GalleryAccounts","class","AddImgToGallery","OnSrcPostChange","imgsrc","getUserProfile","file","photos","setUserStatus","getUserStatus","newpick","postId"],"mappings":"uGAAA,qJAGMA,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CAAC,UAAW,0CAGZC,EAAW,CACpBC,SADoB,WACqB,IAAhCC,EAA+B,uDAAjB,EAAGC,EAAc,uDAAH,EACjC,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GACN,OAAOA,EAASC,SAGxBC,OAPoB,SAObC,GACJ,OAAQd,EAASe,KAAT,iBAAwBD,GAAU,KAE7CE,SAVoB,SAUXF,GACL,OAAOd,EAASiB,OAAT,iBAA0BH,KAErCI,eAboB,SAaLJ,GACV,OAAOd,EAASS,IAAI,WAAaK,KAI7BK,EAAU,CACnBC,GADmB,WAEhB,OAAQpB,EAASS,IAAT,YAEXY,MAJmB,SAIbC,EAAOC,GAA+C,IAArCC,EAAoC,wDAAhBC,EAAgB,uDAAN,KACjD,OAAOzB,EAASe,KAAT,aAA4B,CAACO,QAAOC,WAAUC,aAAYC,aAErEC,OAPmB,WAQf,OAAO1B,EAASiB,OAAT,gBAGFU,EAAa,CACtBC,UADsB,SACZC,GACN,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,QAAQH,GACjB7B,EAASiC,IAAT,gBAA8BH,EAAU,CAC3C1B,QAAS,CACL,eAAgB,0BAI5B8B,YAVsB,SAUVC,GACR,OAAOnC,EAASiC,IAAT,UAAwBE,IAEnCC,aAbsB,SAaTC,EAAQC,GACjB,OAAOtC,EAASiC,IAAT,yBAA+BK,GAAM,CAACD,YAEjDE,UAhBsB,SAgBZD,GACN,OAAOtC,EAASS,IAAT,yBAA+B6B,MAGjCE,EAAc,CACvBC,cADuB,WAEnB,OAAOzC,EAASS,IAAT,+B,0LC5DFiC,EAAsB,SAACC,EAAOC,EAAQC,EAAgBC,GAC/D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAoBD,EACf,2BAAII,GAAMF,GAEdE,MCGTC,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAmB,mBACnBC,EAA+B,+BAGjCC,EAAe,CACfC,MAAO,GACPjD,SAAU,EACVkD,gBAAiB,EACjBnD,YAAa,EACboD,YAAY,EACZC,oBAAqB,CAAC,EAAG,IAyDhBC,EAAgB,SAAC/C,GAAD,MAAwC,CAACgD,KAAMb,EAAQnC,WAKvEiD,EAAkB,SAACjD,GAAD,MAA0C,CAACgD,KAAMZ,EAAUpC,WAuB7EkD,EAAmB,SAACL,GAAD,MAAgD,CAACG,KAAMR,EAAkBK,eAe5FM,EAAe,SAACC,EAAc1D,GACvC,8CAAO,WAAO2D,EAAUC,GAAjB,eAAAC,EAAA,6DACHF,EAASH,GAAiB,IAC1BG,EA/BoE,CAACL,KAAMV,EAAkB7C,YA+BrE2D,IAFrB,SAGc7D,IAASC,SAAS4D,EAAM1D,GAHtC,OAGCI,EAHD,OAIHuD,EAASH,GAAiB,IAC1BG,GAvCiBV,EAuCC7C,EAAK+B,MAvCoC,CAACmB,KAAMX,EAAWM,WAwC7EU,GA9B2BG,EA8BC1D,EAAK0D,WA9B0C,CAC/ER,KAAMT,EACNkB,MAAOD,KAsBA,iCAxBuB,IAACA,EAVVb,IAkCd,OAAP,yDAUSe,EAAmB,uCAAG,WAAOL,EAAwBrD,EAAgB2D,EACxCC,GADP,SAAAL,EAAA,6DAE/BF,EAASH,GAAiB,IAFK,SAGVS,EAAU3D,GAHA,OAIC,GAJD,OAIlBF,KAAK+D,YACdR,EAASO,EAAc5D,IAE3BqD,EAASH,GAAiB,IAPK,2CAAH,4DASnBnD,EAAS,SAACC,GACnB,8CAAO,WAAOqD,GAAP,SAAAE,EAAA,sDACHG,EAAoBL,EAAUrD,EAAQT,IAASQ,OAAO+D,KAAKvE,KAAWwD,GADnE,2CAAP,uDAIS7C,EAAW,SAACF,GACrB,8CAAO,WAAOqD,GAAP,SAAAE,EAAA,sDACHG,EAAoBL,EAAUrD,EAAQT,IAASW,SAAS4D,KAAKvE,KAAW0D,GADrE,2CAAP,uDAMWc,IAhIQ,WAAkE,IAAjEC,EAAgE,uDAAxDtB,EAAcuB,EAA0C,uCACpF,OAAQA,EAAOjB,MACX,KAAKb,EACD,OAAO,2BACA6B,GADP,IAEIrB,MAAOf,EAAoBoC,EAAMrB,MAAOsB,EAAOjE,OAAQ,KAAM,CAACkE,UAAU,MAEhF,KAAK9B,EACD,OAAO,2BACA4B,GADP,IAEIrB,MAAOf,EAAoBoC,EAAMrB,MAAOsB,EAAOjE,OAAQ,KAAM,CAACkE,UAAU,MAEhF,KAAK7B,EACD,OAAO,2BACA2B,GADP,IAEIrB,MAAOsB,EAAOtB,QAEtB,KAAKL,EACD,OAAO,2BACA0B,GADP,IAEIvE,YAAawE,EAAOxE,cAE5B,KAAK8C,EACD,OAAO,2BACAyB,GADP,IAEIpB,gBAAiBqB,EAAOR,QAGhC,KAAKjB,EACD,OAAO,2BACAwB,GADP,IAEInB,WAAYoB,EAAOpB,aAE3B,KAAKJ,EACD,OAAO,2BACAuB,GADP,IAEIlB,oBAAqBmB,EAAOpB,WAAP,sBACXmB,EAAMlB,qBADK,CACgBmB,EAAOjE,SACtCgE,EAAMlB,oBAAoBqB,QAAO,SAAA3C,GAAE,OAAIA,GAAMyC,EAAOjE,YAElE,QACI,OAAOgE,K,oBCnEnBI,EAAOC,QAAU,CAAC,QAAU,sBAAsB,IAAM,oB,oBCAxDD,EAAOC,QAAU,CAAC,KAAO,wB,oBCAzBD,EAAOC,QAAU,CAAC,IAAM,mB,oBCAxBD,EAAOC,QAAU,CAAC,KAAO,4B,oBCAzBD,EAAOC,QAAU,CAAC,iBAAmB,kC,oBCArCD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,gECAjFD,EAAOC,QAAU,CAAC,KAAO,sB,+JC4BVC,EAzBH,WACR,OACI,sBAAKC,UAAWC,IAAEC,IAAlB,UACI,qBAAKF,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,OAA1C,uBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,IAAIC,gBAAiBJ,IAAEK,OAAnC,oBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,OAAxC,qBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,OAAxC,qBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,OAA1C,uBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,OAAxC,yB,iCCvBVC,EAAc,cACdC,EAAsB,sBAExBrC,EAAe,CACfsC,IAAM,CACF,CAACC,KAAK,UAAUC,GAAG,2GAA4GC,KAAK,KACpI,CAACF,KAAK,QAAQC,GAAG,4EAA6EC,KAAK,MACnG,CAACF,KAAK,OAAOC,GAAG,2GAA4GC,KAAK,OACjI,CAACF,KAAK,OAAOC,GAAG,4EAA6EC,KAAK,QAElGC,UAAU,WA2CHC,EAxCK,WAAmC,IAAlCrB,EAAiC,uDAAzBtB,EAAcuB,EAAW,uCAClD,OAAQA,EAAOjB,MACX,KAAK8B,EAED,IAAIQ,EAAa,CACbL,KAAMjB,EAAMoB,UACZF,GAAI,qFACJC,KAAMnB,EAAMoB,WAEZG,EAAS,2BACNvB,GADM,IAETgB,IAAG,sBAAOhB,EAAMgB,KAAb,CAAkBM,IACrBF,UAAU,KAGd,OAAOG,EAEX,KAAMR,EACF,kCACOf,GADP,IAEIoB,UAAWnB,EAAOuB,iBAG1B,QACI,OAAOxB,I,kDC/BbyB,EAAcC,YAAiB,IAE/BC,EAAO,SAACC,GAEV,OACI,sBAAKrB,UAAWC,IAAEvE,KAAlB,UACI,sBAAKsE,UAAWC,IAAEqB,KAAlB,UACCD,EAAMX,KACP,qBAAMa,IAAI,0FAEV,8BACKF,EAAMT,KADX,gUAIA,4BACK,qBAAKW,IAAKF,EAAMV,OAErB,+BACA,4BAEI,qDAkCDa,EADQC,YAAU,CAACC,KAAM,YAAjBD,EAzBT,SAAC,GAA6D,IAA5DhB,EAA2D,EAA3DA,IAAyCkB,GAAkB,EAAtDC,YAAsD,EAAzCC,YAAyC,EAA7BhB,UAA6B,EAAlBc,cACjDG,EAAgBrB,EAAI/C,KAAI,SAAAhC,GAAI,OAAI,cAAC,EAAD,CAAMgF,KAAMhF,EAAKgF,KAAMC,GAAIjF,EAAKiF,GAAIC,KAAMlF,EAAKkF,UAYnF,OACI,gCACI,4BACI,uBAAMmB,cAAeJ,EAArB,UACI,cAACK,EAAA,EAAD,CAAOC,UAAWC,IAAWxB,KAAM,OAAQyB,YAAa,gBAAiBC,SAAU,CAACC,IAAUnB,KAC9F,uDAGPY,Q,QC3BEQ,EADQC,aApBD,SAAC9C,GACnB,MAAM,CACFgB,IAAKhB,EAAM+C,SAAS/B,IACpBI,UAAWpB,EAAM+C,SAAS3B,cAIT,SAAC/B,GACtB,MAAM,CACF8C,YAAa,SAACa,GACV3D,EFwB0B,SAAC2D,GACnC,MAAO,CACHhE,KAAM+B,EAAqBS,eAAgBwB,GE1B9BC,CAAuBD,KAEpCZ,YAAa,WACT/C,EF2BD,CACHL,KAAM8B,QErBSgC,CAA4Cf,GCbpDmB,EAVF,SAACtB,GACV,OACI,sBAAKrB,UAAWC,IAAE2C,QAAlB,+LAEI,cAAC,EAAD,Q,kBCIGC,EAVC,WACZ,OACI,qBAAK7C,UAAWC,IAAEqB,KAAlB,SACC,2B,kBCSMwB,EAZH,WACR,OACI,sBAAK9C,UAAWC,IAAE8C,IAAlB,UACI,mIAGJ,4BACI,qBAAKxB,IAAI,+E,mCCNfyB,EAAQ,SAAC3B,GACX,OACI,qBAAKrB,UAAWC,IAAEgD,KAAlB,SACI,8BACK5B,EAAMX,KACP,mBAAGwC,KAAK,GAAR,SACK7B,EAAM8B,aAgBZC,EAVC,SAAC/B,GACb,IAAIgC,EACAhC,EAAMiC,KAAK5F,KAAI,SAAA6F,GAAC,OAAI,cAAC,EAAD,CAAO7C,KAAM6C,EAAE7C,KAAMyC,KAAMI,EAAEC,cAClD,OACC,8BACKH,KCDEI,EAfD,SAACpC,GACX,OACI,gCACI,8BACI,0CAIJ,4BACI,cAAC,EAAD,CAASiC,KAAMjC,EAAMiC,a,iBCGtBI,EAZA,SAACrC,GACZ,OACQ,yBAAQrB,UAAWC,IAAE0D,OAArB,UACI,4BACI,qBAAKpC,IAAI,+DAEZF,EAAMuC,OACD,8BAAIvC,EAAMrF,MAAV,KAAkB,wBAAQ6H,QAASxC,EAAMhF,OAAvB,wBAClB,cAAC,IAAD,CAAS+D,GAAG,SAASJ,UAAWC,IAAE0D,OAAlC,yB,0CCThBG,GAAgB,gBAChBC,GAA0B,4BAW5B5F,GAAe,CACf1C,OAAQ,KACRQ,MAAO,KACP+H,SAAU,KACVJ,QAAQ,EACRK,WAAY,MA2BHC,GAAkB,SAACzI,EAAuBQ,EAAsBD,EAAsB4H,GAApE,MAAmH,CAACnF,KAAMqF,GAAeK,QAAQ,CAAC1I,SAAQQ,QAAOD,QAAO4H,YAK1LQ,GAAa,SAACH,GAAD,MAA+C,CAACxF,KAAMsF,GAAyBI,QAASF,IAErGI,GAAkB,yDAAM,WAAOvF,GAAP,uBAAAE,EAAA,sEACZlD,KAAQC,KADI,OAEI,KADjCT,EAD6B,QAEhBC,KAAK+D,aAAiB,EAENhE,EAASC,KAAKA,KAAlC0B,EAF0B,EAE1BA,GAAIhB,EAFsB,EAEtBA,MAAOD,EAFe,EAEfA,MAChB8C,EAASoF,GAAgBjH,EAAKhB,EAAOD,GAAO,KALnB,2CAAN,uDAkChBsI,GAjEK,WAAyD,IAAxD7E,EAAuD,uDAA/CtB,GAAcuB,EAAiC,uCACxE,OAAQA,EAAOjB,MACX,KAAKqF,GACD,OAAO,2BACArE,GACAC,EAAOyE,SAElB,KAAKJ,GACD,OAAO,2BAAItE,GAAX,IAAkBwE,WAAYvE,EAAOyE,UACzC,QACI,OAAO1E,IC3Bb8E,G,uKAIE,OACI,cAAC,EAAD,eAAYC,KAAKnD,Y,GALDoD,IAAMC,WAanBnC,gBAJQ,SAAC9C,GAAD,MAAY,CAC/BmE,OAAQnE,EAAMkF,KAAKf,OACnB5H,MAAOyD,EAAMkF,KAAK3I,SAEiB,CAACK,OD6DlB,yDAAM,WAAOyC,GAAP,SAAAE,EAAA,sEACJlD,KAAQO,SADJ,OAEa,IAFb,OAEPd,KAAK+D,YACdR,EAASoF,GAAgB,KAAO,KAAM,MAAM,IAH5B,2CAAN,wDC7DP3B,CAAkCgC,I,qBCX3CrD,GAAcC,YAAiB,IAyB/ByD,GAAiBnD,YAAU,CAACC,KAAM,SAAjBD,EAvBL,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAcsC,EAAuB,EAAvBA,WAAYY,EAAW,EAAXA,MAC1C,OACI,uBAAMC,SAAUnD,EAAhB,UACI,8BACKoD,YAAY,QAAQ,QAAQ,CAAC1C,IAAUnB,IAAa8D,OAEzD,8BACKD,YAAY,WAAW,WAAW,CAAC1C,IAAUnB,IAAa8D,IAAO,cAEtE,gCACI,cAAChD,EAAA,EAAD,CAAOvD,KAAM,WAAYiC,KAAM,aAAcuB,UAAW,UAD5D,kBAGCgC,GAAc,qBAAK1C,IAAK0C,IACxBA,GAAcc,YAAY,qBAAqB,UAAW,GAAI,SAC7DF,GAAS,qBAAK7E,UAAWC,KAAEgF,iBAAlB,SACNJ,IAEL,8BACI,mDAwBDtC,gBAJS,SAAC9C,GAAD,MAAY,CAChCmE,OAAOnE,EAAMkF,KAAKf,OAClBK,WAAWxE,EAAMkF,KAAKV,cAEc,CAACjI,MFepB,SAACC,EAAeC,EAAkBC,EAAqBC,GAAvD,8CAA2E,WAAO0C,GAAP,iBAAAE,EAAA,sEAEvElD,KAAQE,MAAMC,EAAOC,EAAUC,EAAYC,GAF4B,OAGvD,KADjCd,EAFwF,QAG3EC,KAAK+D,WACdR,EAASuF,MAC0B,KAA7B/I,EAASC,KAAK+D,WACpBR,EAXc,uCAAM,WAAOA,GAAP,iBAAAE,EAAA,sEACL7B,KAAYC,gBADP,OACtB9B,EADsB,OAEtB2I,EAAa3I,EAASC,KAAK2J,IACjCpG,EAASsF,GAAWH,IAHQ,2CAAN,wDAaRkB,EAAU7J,EAASC,KAAK6J,SAASC,OAAS,EAAI/J,EAASC,KAAK6J,SAAS,GAAK,aAChFtG,EAASwG,aAAW,QAAS,CAACC,OAAQJ,MAT8C,2CAA3E,wDEfN5C,EAjBD,SAAC,GAAiC,IAAhCqB,EAA+B,EAA/BA,OAAQ5H,EAAuB,EAAvBA,MAAOiI,EAAgB,EAAhBA,WAK3B,OAAGL,EACQ,cAAC,IAAD,CAAUxD,GAAI,aAEnB,gCACF,uCACA,cAACwE,GAAD,CAAgBE,SATH,SAACrI,GAEdT,EAAMS,EAAST,MAAOS,EAASP,SAAUO,EAASN,WAAYM,EAASL,UAOnC6H,WAAYA,U,SC3ClDuB,GAAsB,sBAKxBrH,GAAiC,CACjCsH,aAAa,GAgCFC,GA7BI,WAAyD,IAAxDjG,EAAuD,uDAA/CtB,GAAcuB,EAAiC,uCACvE,OAAQA,EAAOjB,MACX,KAAK+G,GACD,OAAO,2BACA/F,GADP,IAEIgG,aAAa,IAErB,QACI,OAAOhG,I,kBCnBftB,GAAiB,CACjB,CAACuC,KAAK,UAAU8C,SAAS,QACzB,CAAC9C,KAAK,WAAWiF,QAAQ,OACzB,CAACjF,KAAK,QAAQ8C,SAAS,KACvB,CAAC9C,KAAK,SAAS8C,SAAS,MACxB,CAAC9C,KAAK,QAAQ8C,SAAS,OACvB,CAAC9C,KAAK,WAAW8C,SAAS,MAC1B,CAAC9C,KAAK,UAAU8C,SAAS,OAOdoC,GAHM,WAAmC,IAAlCnG,EAAiC,uDAAzBtB,GAC1B,OAAOsB,G,8BCFPoG,GAAcC,aAAgB,CAC9BtD,SAAU1B,EACViF,YAAaC,KACbvC,MAAMmC,GACNK,YAAazG,KACbmF,KAAML,GACN4B,IAAKR,GACLhE,KAAMyE,OAQJC,GAAmBC,OAAOC,sCAAwCC,KAElEC,GAAQC,aAAYZ,GAAaO,GAAiBM,aAAgBC,QAExEN,OAAOO,UAAYJ,GAEJA,UC3BFK,GAAe,SAACnC,GACzB,OAAO,SAACrD,GACJ,OAAO,cAAC,WAAD,CAAUyF,SAAU,cAAC,KAAD,IAApB,SACH,cAACpC,EAAD,eAAerD,QCSrB0F,GAAmBtC,IAAMuC,MAAK,kBAAM,iCACpCC,GAAmBxC,IAAMuC,MAAK,kBAAM,iCAEpCE,G,gLACgBrC,EAAOsC,GACrBC,QAAQC,IAAR,iBAAsBxC,M,0CAItBL,KAAKnD,MAAMiG,kB,+BAIX,OAAK9C,KAAKnD,MAAMoE,YAIZ,cAAC,IAAD,UACI,sBAAKzF,UAAU,cAAf,UACI,cAAC,GAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACI,cAAC,IAAD,CAAOuH,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,OACpC,cAAC,IAAD,CAAOD,KAAK,WAAWvF,UAAWY,IAClC,cAAC,IAAD,CAAO2E,KAAK,SAASC,OAAQ,kBAAM,cAAC,EAAD,OACnC,cAAC,IAAD,CAAOD,KAAK,oBAAoBC,OAAQZ,GAAaI,MACrD,cAAC,IAAD,CAAOO,KAAK,SAASC,OAAQZ,GAAaE,MAC1C,cAAC,IAAD,CAAOS,KAAK,SAASC,OAAQ,kBAAM,cAAC,GAAD,UAEvC,cAAC,EAAD,SAfD,cAAC,KAAD,Q,GAXDhD,IAAMC,WAoCpBgD,GAAenB,aACnBhE,aAJwB,SAAC9C,GAAD,MACxB,CAACgG,YAAahG,EAAMyG,IAAIT,eAGA,CAAC6B,cJ3BI,kBAAM,SAACxI,GAChC,IAAI6I,EAAU7I,EAASuF,MAEvBuD,QAAQC,IAAI,CAACF,IAAUtM,MAAK,WACxByD,EAN8D,CAACL,KAAM+G,YI4B1De,CACuBW,IAW3BY,GATM,SAACzG,GAElB,OAAO,cAAC,IAAD,UACH,cAAC,IAAD,CAAUmF,MAAOA,GAAjB,SACI,cAACkB,GAAD,SCzDRK,IAASN,OACG,cAAC,GAAD,IACRO,SAASC,eAAe,U,gMCFnB/F,EAAW,SAAC,GAA6B,IAA5BgG,EAA2B,EAA3BA,MAAgB7G,GAAW,EAApB8G,KAAoB,iCACjD,OACI,qBAAKnI,UAAWC,IAAEmI,YAAc,IAAMnI,IAAE4E,MAAxC,SACI,oDAAcqD,GAAW7G,OAIxB2D,EAAQ,SAAC,GAA6B,IAA5BkD,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAS9G,EAAW,gCACxCgH,EAAqBF,EAAKG,SAAWH,EAAKtD,MAChD,OACI,sBAAK7E,UAAWC,IAAEmI,YAAc,KAAOC,EAAqBpI,IAAE4E,MAAQ,IAAtE,UACI,iDAAWqD,GAAW7G,IACrBgH,GAAsB,+BAAOF,EAAKtD,YAKlCE,EAAc,SAAC5C,EAAazB,EAAM6H,EAAYtG,GAA4C,IAAjCxD,EAAgC,uDAA1B,GAAI4C,EAAsB,uDAAhB,GAAIT,EAAY,uDAAP,GAE3F,OAAO,iCACH,cAAC,IAAD,aAAOuB,YAAaA,EAAazB,KAAMA,EAChC8H,SAAUD,EAAYtG,UAAWA,EAAWxD,KAAMA,GAAU4C,IAAST,O,gCC1BpF,oEAAO,IAAMyB,EAAW,SAAAoG,GACpB,IAAIA,EACJ,MAAO,qBAGEtH,EAAmB,SAACuH,GAAD,OAAe,SAACD,GAC5C,GAAIA,EAAMpD,OAASqD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCLlC7I,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,2CCD5D,MAA0B,sC,uBCS1B6I,IANI,SAACtH,GAChB,OAAO,qBAAKrB,UAAWC,IAAE2I,UAAlB,SACH,qBAAKrH,IAAKqH,Q,mBCJlB/I,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,qB,mBCAnDD,EAAOC,QAAU,CAAC,OAAS,yB,yUCGrB+I,EAAU,UACVC,EAAe,MACfC,EAAc,UACdC,EAAa,aACbC,EAAmB,mBACnBC,EAAkB,kBAGpB/K,EAAe,CACfgL,gBAAiB,CACb,CAACC,MAAO,SAAU1I,KAAM,4KAA6KzD,GAAI,GACzM,CACImM,MAAO,SACP1I,KAAM,4KACNzD,GAAI,GAER,CAACmM,MAAO,QACJ1I,KAAM,0KACNzD,GAAI,IAGZ4D,UAAW,WACX/D,QAAS,KACTE,OAAQ,MAmDCqM,EAAkB,iBAA4B,CAAC5K,KAAMoK,IACrDS,EAAkB,SAAC7G,GAAD,MAA2C,CAAChE,KAAMuK,EAAYO,OAAQ9G,IAexF+G,EAAiB,SAAC/N,GAAD,8CAAoB,WAAOqD,GAAP,eAAAE,EAAA,sEACzBhE,IAASa,eAAeJ,GADC,OAC1CH,EAD0C,OAE9CwD,GAhB2BhC,EAgBHxB,EAASC,KAhBwC,CAACkD,KAAMwK,EAAkBnM,aAcpD,iCAdpB,IAACA,IAcmB,OAApB,uDAKjBP,EAAY,SAACkN,GAAD,8CAAkB,WAAO3K,GAAP,eAAAE,EAAA,sEAClB1C,IAAWC,UAAUkN,GADH,OACnCnO,EADmC,OAEvCwD,GAhB6B4K,EAgBHpO,EAASC,KAAKA,KAAKmO,OAhByB,CAACjL,KAAMqK,EAAcY,YAcpD,iCAdX,IAACA,IAcU,OAAlB,uDAIZ7M,EAAc,SAACC,GAAD,8CAA0B,WAAOgC,EAAeC,GAAtB,mBAAAC,EAAA,6DAC3CvD,EAASsD,IAAW4F,KAAKlJ,OADkB,SAE5Ba,IAAWO,YAAYC,GAFK,OAGhB,KAD7BxB,EAF6C,QAGpCC,KAAK+D,WACdR,EAAS0K,EAAe/N,KAEpB0J,EAAU7J,EAASC,KAAK6J,SAASC,OAAS,EAAI/J,EAASC,KAAK6J,SAAS,GAAK,GAC9EtG,EAASwG,YAAW,eAAgB,CAACC,OAAQJ,MAPA,2CAA1B,yDAUdwE,EAAgB,SAAhBA,IAAgB,IAAC3M,EAAD,uDAAU,GAAV,8CAAiB,WAAO8B,EAAeC,GAAtB,eAAAC,EAAA,6DACpCvD,EAASsD,IAAW4F,KAAKlJ,OADW,SAErBa,IAAWS,aAAaC,EAAQvB,GAFX,cAG1CqD,EAAS6K,EAAc3M,IAHmB,2CAAjB,yDAKhB4M,EAAgB,yDAAM,WAAO9K,EAAeC,GAAtB,iBAAAC,EAAA,6DACzBvD,EAASsD,IAAW4F,KAAKlJ,OADA,SAEVa,IAAWY,UAAUzB,GAFX,OAE3BH,EAF2B,OAG/BwD,EAAS6K,EAAcrO,IAHQ,2CAAN,yDAOd0K,IA9FQ,WAA0D,IAAzDvG,EAAwD,uDAAhDtB,EAAcuB,EAAkC,uCAC5E,OAAQA,EAAOjB,MACX,KAAKoK,EACD,IAAIgB,EAAU,CACVT,MAAO,OACP1I,KAAMjB,EAAMoB,UACZ5D,GAAI,GAEJ+D,EAAS,2BACNvB,GADM,IAET0J,gBAAgB,GAAD,mBAAM1J,EAAM0J,iBAAZ,CAA6BU,IAC5ChJ,UAAW,KAEf,OAAOG,EAEX,KAAKgI,EACD,IAAIhI,EAAS,eAAOvB,GAEpB,OADAuB,EAAUH,UAAYnB,EAAO6J,OACtBvI,EAEX,KAAKiI,EACD,OAAO,2BAAIxJ,GAAX,IAAkB3C,QAAS4C,EAAO5C,UAEtC,KAAKiM,EACD,OAAO,2BAAItJ,GAAX,IAAkB0J,gBAAiB1J,EAAM0J,gBAAgBvJ,QAAO,SAAA2D,GAAC,OAAIA,EAAEtG,IAAMyC,EAAOoK,YAExF,KAAKhB,EACD,OAAO,2BAAIrJ,GAAX,IAAkB3C,QAAQ,2BAAK2C,EAAM3C,SAAZ,IAAqB4M,OAAQhK,EAAOgK,WAEjE,KAAKR,EACD,OAAO,2BAAIzJ,GAAX,IAAkBzC,OAAQ0C,EAAO1C,SAErC,QACI,OAAOyC,M","file":"static/js/main.3a09f557.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": \"56245fdd-e3d2-46ed-807c-f34ef5d03262\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n           ).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    follow(userId){\r\n       return  instance.post(`follow/${userId}`, {})\r\n    },\r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    galleryProfile(userId) {\r\n         return instance.get(`profile/` + userId)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n       return  instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    savePhoto(photoFile){\r\n        let formData = new FormData()\r\n        formData.append(\"image\",photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': \"multipart/form-data\"\r\n            }\r\n        } )\r\n    },\r\n    saveProfile(profile){\r\n        return instance.put(`profile`, profile)\r\n    },\r\n    updateStatus(status, id){\r\n        return instance.put(`profile/status/${id}`, {status})\r\n    },\r\n    getStatus(id){\r\n        return instance.get(`profile/status/${id}`)\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl(){\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n","export const updateObjectInArray = (items, itemId, objectPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objectPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import axios from \"axios\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objectHelper\";\r\nimport {PhotosType, UserType} from \"../types/types\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETING = 'TOGGLE-IS-FETING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [2, 3] as Array<number> //id пользователей, на которых нельзя подписатья\r\n};\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst supportReducer = (state = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n\r\n        case TOGGLE_IS_FETING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\ntype ActionTypes = FollowSuccessType | UnfollowSuccessType | SetUsersType | SetCurrentPageType |\r\n    SetTotalUsersCountType | ToggleIsFetchingType | ToggleFollowingProgressType\r\n\r\ntype FollowSuccessType = {\r\n    type: typeof FOLLOW,\r\n    userId: number\r\n}\r\nexport const followSuccess = (userId: number): FollowSuccessType => ({type: FOLLOW, userId})\r\ntype UnfollowSuccessType = {\r\n    type: typeof UNFOLLOW,\r\n    userId: number\r\n}\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessType => ({type: UNFOLLOW, userId})\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS,\r\n    users: Array<UserType>\r\n}\r\nexport const setUsers = (users: Array<UserType>): SetUsersType => ({type: SET_USERS, users})\r\ntype SetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE,\r\n    currentPage: number\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageType => ({type: SET_CURRENT_PAGE, currentPage})\r\ntype SetTotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT,\r\n    count: number\r\n}\r\nexport const setTotalUsersCount = (totalCount: number): SetTotalUsersCountType => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalCount\r\n})\r\ntype ToggleIsFetchingType = {\r\n    type: typeof TOGGLE_IS_FETING,\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingType => ({type: TOGGLE_IS_FETING, isFetching})\r\ntype ToggleFollowingProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching: boolean,\r\n    userId: number\r\n}\r\nexport const toggleFollowingProgress = (userId: number): ToggleFollowingProgressType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    userId,\r\n    isFetching: true\r\n})\r\n\r\ntype getStateType = () => AppStateType\r\ntype DispatchType = Dispatch<ActionTypes>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n    }\r\n}\r\nexport const _followUnfollowFlow = async (dispatch: DispatchType, userId: number, apiMethod: any,\r\n                                          actionCreator: (userId: number) => FollowSuccessType | UnfollowSuccessType) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFetching(false))\r\n}\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        _followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        _followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\n\r\nexport default supportReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Main_content__2OzRI\",\"img\":\"Main_img__31J-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"prof\":\"Profile_prof__2SkzI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"end\":\"End_end__JTlUq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pack\":\"OneTypePack_pack__uJIR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__3-aDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__2hczD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__3y9df\",\"item\":\"NavBar_item__3-V5x\",\"active\":\"NavBar_active__3YR2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Packs_list__yau_1\"};","import React from 'react';\r\nimport s from './NavBar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return(\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/' activeClassName={s.active}>Main</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/packs' activeClassName={s.active}>Packs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/gallery' activeClassName={s.active}>Gallery</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/Login' activeClassName={s.active}>Login</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","const ADD_COMMENT = 'ADD-COMMENT'\r\nconst UPDATE_COMMENT_TEXT = 'UPDATE-COMMENT-TEXT'\r\n\r\nlet initialState = {\r\n    Top : [\r\n        {name:'Vitalya',sr:'https://upload.wikimedia.org/wikipedia/commons/thumb/9/94/Desert_Electric.jpg/1200px-Desert_Electric.jpg', text:'F'},\r\n        {name:'Sergo',sr:'https://cdn.pixabay.com/photo/2018/05/04/14/11/nature-3374057_960_720.jpg', text:'Ff'},\r\n        {name:'Bibs',sr:'https://upload.wikimedia.org/wikipedia/commons/thumb/9/94/Desert_Electric.jpg/1200px-Desert_Electric.jpg', text:'Fff'},\r\n        {name:'Bobs',sr:'https://cdn.pixabay.com/photo/2018/05/04/14/11/nature-3374057_960_720.jpg', text:'FFF'}\r\n    ],\r\n        BlockPost:'comment'\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_COMMENT: {\r\n            debugger;\r\n            let newcomment = {\r\n                name: state.BlockPost,\r\n                sr: 'https://sun9-39.userapi.com/cLfRr5r8qAegXK0iJE8wQ1oxwoIeIqjTHaz4WQ/8ItJwatmRkc.jpg',\r\n                text: state.BlockPost\r\n            };\r\n            let stateCopy = {\r\n                ...state,\r\n                Top : [...state.Top, newcomment],\r\n                BlockPost:''\r\n            }\r\n\r\n            return stateCopy;\r\n        }\r\n        case  UPDATE_COMMENT_TEXT: {\r\n            return{\r\n                ...state,\r\n                BlockPost: action.texariacomment,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport const onPostChangeActCreator = (comment) => {\r\n    return {\r\n        type: UPDATE_COMMENT_TEXT, texariacomment: comment\r\n    }\r\n}\r\nexport const addCommentsActioncreator = () => {\r\n    return {\r\n        type: ADD_COMMENT\r\n    }\r\n}\r\n\r\n\r\nexport default mainReducer;","import React from 'react'\r\nimport s from './Post.module.css'\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength25 = maxLengthCreator(25)\r\n\r\nconst Post = (props) => {\r\n\r\n    return   (\r\n        <div className={s.post}>\r\n            <div className={s.prof}>\r\n            {props.name}\r\n            <img  src='https://sun9-39.userapi.com/cLfRr5r8qAegXK0iJE8wQ1oxwoIeIqjTHaz4WQ/8ItJwatmRkc.jpg'/>\r\n            </div>\r\n            <p>\r\n                {props.text}\r\n                A почему бы на главной странице не оставить свой важный текст???\r\n            </p>\r\n            <p>\r\n                 <img src={props.sr}/>\r\n            </p>\r\n            <form>\r\n            <p>\r\n\r\n                <button>comment</button>\r\n            </p>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst Posts = ({Top, onPostChang, addComments,BlockPost, handleSubmit })=> {\r\n    let PostsElements = Top.map(post => <Post name={post.name} sr={post.sr} text={post.text}/>);\r\n    let NewComment = React.createRef();\r\n\r\n\r\n    let onPostChange = () => {\r\n        let comment = NewComment.current.value;\r\n        onPostChang(comment);\r\n    }\r\n\r\n    let onAddComments = (formData) => {\r\n        addComments(formData.post);\r\n    }\r\n    return (\r\n        <div>\r\n            <p>\r\n                <form onAddComments={handleSubmit}>\r\n                    <Field component={Textarea}  name={'post'} placeholder={\"Text for post\"} validata={[required, maxLength25]}/>\r\n                    <button>send comment</button>\r\n                </form>\r\n            </p>\r\n            {PostsElements}\r\n        </div>\r\n    )\r\n};\r\nconst PostsReduxForm = reduxForm({form: 'mainPost'})(Posts)\r\nexport default PostsReduxForm","import React from 'react'\r\nimport {addCommentsActioncreator, onPostChangeActCreator} from \"../../../Redux/Main_reducer.js\";\r\nimport Posts from \"./Post\";\r\nimport {connect} from \"react-redux\";\r\nimport PostsReduxForm from \"./Post\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        Top: state.MainPage.Top,\r\n        BlockPost: state.MainPage.BlockPost\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        onPostChang: (comment) => {\r\n            dispatch(onPostChangeActCreator(comment))\r\n        },\r\n        addComments: () => {\r\n            dispatch(addCommentsActioncreator())\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\nconst PostsContainer = connect(mapStateToProps,mapDispatchToProps)(PostsReduxForm);\r\nexport default PostsContainer","import React from 'react';\r\nimport s from './Main.module.css';\r\nimport PostsContainer from \"../Post/PostContainer\";\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            Здесь мог располагаться ваш текст\r\n            <PostsContainer  />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react';\r\nimport s from './Profile.module.css'\r\nconst Profile = () => {\r\n    return(\r\n        <div className={s.prof}>\r\n         <div>\r\n\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport s from './End.module.css'\r\nconst End = () => {\r\n    return(\r\n        <div className={s.end}>\r\n            <p>\r\n                все права защищены\r\n            </p>\r\n        <p>\r\n            <img src='https://png.pngtree.com/element_our/sm/20180301/sm_5a9797d5c93d3.jpg'/>\r\n        </p>\r\n        </div>\r\n    )\r\n}\r\nexport default End","import React from 'react'\r\nimport s from './OneTypePack.module.css'\r\n\r\nconst Packi = (props) => {\r\n    return(\r\n        <div className={s.pack}>\r\n            <p>\r\n                {props.name}\r\n                <a href=''>\r\n                    {props.link}\r\n                </a>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\nconst OnePack = (props) => {\r\n    let PackModule =\r\n        props.Pack.map(p => <Packi name={p.name} link={p.linkdisk}/>)\r\n       return(\r\n        <div>\r\n            {PackModule}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OnePack","import React from 'react'\r\nimport s from './Packs.module.css'\r\nimport OnePack from \"./OneTypePack/OneTypePack\";\r\n\r\nconst Packs = (props) => {\r\n    return(\r\n        <div>\r\n            <div >\r\n                <a>\r\n                    writeln\r\n                </a>\r\n            </div>\r\n            <p>\r\n                <OnePack Pack={props.Pack}/>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Packs","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n            <header className={s.header}>\r\n                <a>\r\n                    <img src='https://pngimg.com/uploads/photoshop/photoshop_PNG11.png' />\r\n                </a>\r\n                {props.isAuth\r\n                    ? <a>{props.login}  <button onClick={props.logout}>Log out</button></a>\r\n                    : <NavLink to='/login' className={s.header}>Profile</NavLink>}\r\n            </header>\r\n    );\r\n}\r\nexport default Header","import { stopSubmit } from \"redux-form\";\r\nimport {authAPI, securityAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst GET_CAPTCHA_URL_SUCCESS = '/security/get-captcha-url'\r\n\r\nexport type InitialStateType2 = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    username: string | null,\r\n    isAuth: boolean,\r\n    captchaUrl: string | null\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    username: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action: any):InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {...state, captchaUrl: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\ntype PayloadType = {\r\n    userId: number | null\r\n    email: string | null, login: string | null, isAuth: boolean\r\n}\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: PayloadType\r\n}\r\n\r\n\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean):SetAuthUserDataActionType => ({type: SET_USER_DATA, payload:{userId, email, login, isAuth}})\r\ntype setCaptchaActionType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS,\r\n    payload: string\r\n}\r\nexport const setCaptcha = (captchaUrl: string): setCaptchaActionType => ({type: GET_CAPTCHA_URL_SUCCESS, payload: captchaUrl })\r\n\r\nexport const getUserAuthData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me()\r\n        if (response.data.resultCode === 0){\r\n            debugger\r\n            let {id, email, login} = response.data.data;\r\n            dispatch(setAuthUserData(id , email, login, true ))\r\n        };\r\n}\r\nexport const getCaptcha = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n    dispatch(setCaptcha(captchaUrl))\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (response.data.resultCode === 0){\r\n            dispatch(getUserAuthData())\r\n        } else if(response.data.resultCode === 10){\r\n            dispatch(getCaptcha())\r\n        } else {\r\n            const message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n\r\n}\r\nexport const logout = () => async (dispatch: any) => {\r\n   let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0){\r\n            dispatch(setAuthUserData(null , null, null, false ))\r\n        }\r\n}\r\n\r\n\r\nexport default authReducer","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserAuthData, logout} from \"../../Redux/auth_reducer\";\r\n\r\n\r\nclass HeaderContain extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps= (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\nexport default connect(mapStateToProps,{logout})(HeaderContain)\r\n","import React from 'react'\r\nimport {Field , reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../Redux/auth_reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validator\";\r\nimport s from \"./Login.module.css\"\r\nconst maxLength25 = maxLengthCreator(25)\r\n\r\nconst LoginForm = ({handleSubmit, captchaUrl, error}) => {\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                {createField(\"Login\",'login',[required, maxLength25],Input)}\r\n            </div>\r\n            <div>\r\n                {createField(\"Password\",'password',[required, maxLength25],Input, \"password\")}\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={'input'}/> remember me\r\n            </div>\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl && createField(\"Symbols from image\",\"captcha\", [], \"input\")}\r\n            { error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = ({isAuth, login, captchaUrl}) => {\r\n    const onSubmit = (formData) => {\r\n        debugger\r\n        login(formData.login, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if(isAuth) {\r\n        return <Redirect to={'/gallery'}/>\r\n    }\r\n    return<div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth:state.auth.isAuth,\r\n    captchaUrl:state.auth.captchaUrl\r\n})\r\nexport default connect(mapStateToProps, {login}) (Login)","import {getUserAuthData} from \"./auth_reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action: any):InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype InitializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = ():InitializedSuccessActionType => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getUserAuthData())\r\n\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\nexport default appReducer","let initialState =   [\r\n    {name:'Filtres',linkdisk:'http'},\r\n    {name:'Textures',linkdik:'ppp'},\r\n    {name:'Glare',linkdisk:'0'},\r\n    {name:'Action',linkdisk:'12'},\r\n    {name:'Brush',linkdisk:'net'},\r\n    {name:'Gradient',linkdisk:'13'},\r\n    {name:'Pattern',linkdisk:'AA'},\r\n];\r\n\r\n\r\nconst packsReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default packsReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport mainReducer from \"./Main_reducer\";\r\nimport GalleryReducer from \"./Galerey_reducer\";\r\nimport packsReducer from \"./Packs_reducer\";\r\nimport supportReducer from \"./support_reducer\";\r\nimport authReducer from \"./auth_reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app_reducer\";\r\n\r\nlet RootReducer = combineReducers({\r\n    MainPage: mainReducer,\r\n    GalleryPage: GalleryReducer,\r\n    Packs:packsReducer,\r\n    SupportPage: supportReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n    }\r\n)\r\n\r\ntype RootReducerType = typeof RootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport default store","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../Components/common/Preloader/preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n\r\n    }\r\n}","import React, { Suspense } from 'react';import './App.css';\nimport Nav from \"./Components/NavBar/NavBar\";\nimport Main from \"./Components/Main/Main/Main\";\nimport Profile from \"./Components/Profile/Profile\";\nimport End from \"./Components/End/End\";\nimport {Route, BrowserRouter} from \"react-router-dom\";\nimport Packs from \"./Components/Packs/Packs\";\nimport HeaderContain from \"./Components/Header/HeaderContainer\";\nimport Login from \"./Components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app_reducer\";\nimport Preloader from \"./Components/common/Preloader/preloader\";\nimport store from \"./Redux/redux-store\";\nimport {withSuspense} from \"./hoc/LazyFunctoin\";\n\nconst SupportContainer = React.lazy(() => import(\"./Components/Support/SupportContainer\"))\nconst GalleryContainer = React.lazy(() => import('./Components/Gallery/GalleryContainer'));\n\nclass App extends React.Component {\n    componentDidCatch(error, errorInfo) {\n        console.log(`error: ${error}`)\n    }\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <BrowserRouter>\n                <div className='app-wrapper'>\n                    <HeaderContain/>\n                    <Nav/>\n                    <div className='app-wrapper-content'>\n                        <Route exact path='/' render={() => <Main/>}/>\n                        <Route path='/profile' component={Profile}/>\n                        <Route path='/packs' render={() => <Packs/>}/>\n                        <Route path='/gallery/:userId?' render={withSuspense(GalleryContainer)}                     />\n                        <Route path='/users' render={withSuspense(SupportContainer)}/>\n                        <Route path='/Login' render={() => <Login/>}/>\n                    </div>\n                    <End/>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>(\n{initialized: state.app.initialized})\n\nlet AppContainer = compose(\nconnect(mapStateToProps,{initializeApp}))(App)\n\nconst LastFrontApp = (props) =>\n{\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default LastFrontApp\nexport\n{\n    AppContainer\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport LastFrontApp from \"./App\";\n\n    ReactDOM.render(\n                <LastFrontApp />,\n        document.getElementById('root')\n    );\n\n\n\n","import React from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport s from \"./FormsControls.module.css\"\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    return(\r\n        <div className={s.formControl + \" \" + s.error}>\r\n            <textarea {...input} {...props}/>\r\n        </div>\r\n    )\r\n}\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasErrorZeroLength = meta.touched && meta.error\r\n    return(\r\n        <div className={s.formControl + \" \" + (hasErrorZeroLength ? s.error : \"\")}>\r\n            <input {...input} {...props}/>\r\n            {hasErrorZeroLength && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, type ={}, props={}, text=\"\") => {\r\n    debugger\r\n    return <span>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators} component={component} type={type} {...props}/>{text}\r\n    </span>\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxlength) => (value) =>{\r\n    if (value.length > maxlength) return `Max length is ${maxlength} symbols`\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3Y5w-\",\"error\":\"FormsControls_error__3xgev\"};","export default __webpack_public_path__ + \"static/media/preloader.a988df0e.svg\";","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport s from './preloader.module.css'\r\nimport React from 'react'\r\nconst  Preloader = (props) => {\r\n    return <div className={s.preloader}>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__13vrX\",\"prof\":\"Post_prof__1W38x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Ei2fd\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {GalleryType, ProfileType} from \"../types/types\";\r\n\r\nconst ADD_IMG = 'ADD-IMG'\r\nconst CHANGE_PHOTO = 'IMG'\r\nconst DELETE_POST = 'ADD-IMG'\r\nconst UPDATE_SRC = 'UPDATE-SRC'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_USER_STATUS = 'SET_USER_STATUS'\r\n\r\n\r\nlet initialState = {\r\n    GalleryAccounts: [\r\n        {class: 'Nature', name: 'https://sun9-40.userapi.com/impg/IpcbkULm7LqC4XQYLSG_swLa5cdNXXJ4QDerjQ/kdOHf8W9pUc.jpg?size=1080x754&quality=96&proxy=1&sign=9668b310115895160a96b40a1f0a0ba1&type=album', id: 1},\r\n        {\r\n            class: 'Brains',\r\n            name: 'https://sun9-19.userapi.com/impg/4cJlx83BGHrmc-qVpGH4db0aXKPihIP3w2dleA/sG643_rh_h0.jpg?size=1080x769&quality=96&proxy=1&sign=1b706df2572e01cd8a9ecc31bc900c14&type=album',\r\n            id: 2\r\n        },\r\n        {class: 'Games',\r\n            name: 'https://sun9-9.userapi.com/impg/315dd_uMOkpAmL5X4VwiD_L_9SZRAkZjVrZCPw/g4LPT_10jkw.jpg?size=277x329&quality=96&proxy=1&sign=37cd58191b5cf139cc7e98607d033033&type=album',\r\n            id: 3\r\n        }\r\n    ] as Array<GalleryType>,\r\n    BlockPost: 'send img',\r\n    profile: null as ProfileType | null,\r\n    status: null\r\n};\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst GalleryReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_IMG: {\r\n            let newpick = {\r\n                class: 'face',\r\n                name: state.BlockPost,\r\n                id: 5\r\n            };\r\n            let stateCopy = {\r\n                ...state,\r\n                GalleryAccounts: [...state.GalleryAccounts, newpick],\r\n                BlockPost: '',\r\n            };\r\n            return stateCopy;\r\n        }\r\n        case UPDATE_SRC: {\r\n            let stateCopy = {...state};\r\n            stateCopy.BlockPost = action.imgsrc;\r\n            return stateCopy;\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, GalleryAccounts: state.GalleryAccounts.filter(p => p.id != action.postId)}\r\n        }\r\n        case CHANGE_PHOTO: {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\ntype AddImgToGalleryType = {\r\n    type: typeof ADD_IMG}\r\ntype OnSrcPostChangeType = {\r\n    type: typeof UPDATE_SRC,\r\n    imgsrc: string\r\n}\r\ntype setUserProfileType = {\r\n    type: typeof SET_USER_PROFILE,\r\n    profile: ProfileType\r\n}\r\nexport const AddImgToGallery = (): AddImgToGalleryType => ({type: ADD_IMG})\r\nexport const OnSrcPostChange = (comment: string): OnSrcPostChangeType => ({type: UPDATE_SRC, imgsrc: comment})\r\nexport const setUserProfile = (profile: ProfileType): setUserProfileType => ({type: SET_USER_PROFILE, profile})\r\ntype SavePhotoSuccessType = {\r\n    type: typeof CHANGE_PHOTO,\r\n    photos: string\r\n}\r\nexport const savePhotoSuccess = (photos: string):SavePhotoSuccessType => ({type: CHANGE_PHOTO, photos})\r\ntype SetStatusType = {\r\n    type: typeof SET_USER_STATUS,\r\n    status: string\r\n}\r\nexport const setStatus = (status: string): SetStatusType => ({type: SET_USER_STATUS, status})\r\n//export const saveProfileSuccess = (photos: any) => ({type: CHANGE_PHOTO, photos})\r\n//export const DeletePost = (postId: number) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n    let response = await usersAPI.galleryProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const savePhoto = (file: string) => async (dispatch:any) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    dispatch(savePhotoSuccess(response.data.data.photos))\r\n}\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0){\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"\"\r\n        dispatch(stopSubmit(\"edit-Profile\", {_error: message}))\r\n    }\r\n}\r\nexport const setUserStatus = (status = {}) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.updateStatus(status, userId)\r\n    dispatch(setUserStatus(status))\r\n}\r\nexport const getUserStatus = () => async (dispatch: any, getState:any) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setUserStatus(response))\r\n}\r\n\r\n\r\nexport default GalleryReducer"],"sourceRoot":""}