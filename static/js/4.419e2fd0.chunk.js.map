{"version":3,"sources":["assets/images/User_Avatar.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hoc/withAuthRedirect.js","Components/Gallery/Gallery.module.css","Components/Gallery/ProfileStatusHook.jsx","Components/Gallery/ProfileDataForms.jsx","Components/Gallery/Gallery.jsx","Components/Gallery/GalleryContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","withAuthRedirect","Component","RedirectComponent","this","props","auth","to","React","connect","state","isAuth","module","exports","ProfileStatusHook","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","title","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","setUserStatus","ProfileDataFormField","reduxForm","form","profile","isOwner","handleSubmit","savePhoto","error","onSubmit","src","photos","large","userPhoto","type","target","files","createField","keys","contacts","map","key","maxLength25","maxLengthCreator","ProfileData","columngal","onClick","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contacts","GalleryPost","sr","alt","Gallery","GalleryImg","GalleryPage","GalleryAccounts","p","class","name","NewPicture","createRef","initialValues","formData","saveProfile","then","ref","comment","current","updateImgURL","BlockPost","validata","required","addPicture","galleryContainer","userId","match","params","authorizedUserId","getUserProfile","refreshProfile","OnSrcPostChange","AddImgToGallery","compose","getUserStatus","withRouter"],"mappings":"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","file":"static/js/4.419e2fd0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/User_Avatar.02dec563.png\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.auth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let mapStateToPropsForRedirect = (state) => ({\r\n        auth: state.auth.isAuth\r\n    });\r\n    let ConnectedWithAuthRedirect = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedWithAuthRedirect\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columngal\":\"Gallery_columngal__1JIwG\",\"title\":\"Gallery_title__1sgzI\"};","import React, {useEffect, useState} from 'react'\r\nimport s from \"./Gallery.module.css\";\r\n\r\nconst ProfileStatusHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const  ActivateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const  DeactivateMode = () => {\r\n        props.setUserStatus(status)\r\n        setEditMode(false)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div className={s.title}>\r\n                <b>Status: </b>\r\n                <span onDoubleClick={ActivateMode}>{status}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div className={s.title}>\r\n                <b>Status: </b>\r\n                <input autoFocus={true} onChange={onStatusChange}\r\n                       onBlur={DeactivateMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusHook","import React from \"react\";\r\nimport userPhoto from \"../../assets/images/User_Avatar.png\";\r\nimport ProfileStatusHook from \"./ProfileStatusHook\";\r\nimport s from \"./Gallery.module.css\";\r\nimport {createField} from \"../common/FormsControls/FormsControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({profile,isOwner,handleSubmit,savePhoto, error }) => {\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>Save changes</button></div>\r\n            {error && <div>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <img src={profile.photos.large || userPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n            </div>\r\n            <div className={s.title}>\r\n                <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], \"input\")}\r\n            </div>\r\n            <div className={s.title}>\r\n                <b>Looking for job </b>\r\n                {createField(\"\", \"LookingForAJob\", [], \"input\", {type:\"checkbox\"})}\r\n            </div>\r\n            <div>\r\n\r\n                <div className={s.title}>\r\n                    <b>\r\n                        My skills:\r\n                    </b>\r\n                    {createField(\"My professional skills\", \"lookingForAJobDescription\", [], \"textarea\")}\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.title}>\r\n                <b>About me </b>\r\n                {createField(\"About me\", \"aboutMe\", [], \"textarea\")}\r\n            </div>\r\n            <ProfileStatusHook status={\"Hello\"}/>\r\n            <div className={s.title}>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(\r\n                key =>{\r\n                    return <div className={s.title} key={key}>\r\n                            <b>\r\n                                {key}\r\n                            </b>\r\n                        {createField(key, \"contacts.\"+ key, [], \"input\")}\r\n                    </div>\r\n                }\r\n            )}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst ProfileDataFormField = reduxForm({form:\"edit-Profile\"})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormField","import React, {useState} from 'react';\r\nimport s from './Gallery.module.css'\r\nimport Preloader from \"../common/Preloader/preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validator\";\r\nimport ProfileStatusHook from \"./ProfileStatusHook\";\r\nimport userPhoto from \"../../assets/images/User_Avatar.png\"\r\nimport ProfileDataFormField from \"./ProfileDataForms\";\r\nimport {setUserStatus} from \"../../Redux/Galerey_reducer\";\r\n\r\nconst maxLength25 = maxLengthCreator(25)\r\n\r\nconst Gallery = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let GalleryImg = props.GalleryPage.GalleryAccounts.map(p => <GalleryPost class={p.class} sr={p.name}/>)\r\n    let NewPicture = React.createRef();\r\n\r\n    let onGalChange = () => {\r\n        let comment = NewPicture.current.value;\r\n        props.updateImgURL(comment);\r\n    }\r\n    let addPicture = () => {\r\n        props.addPicture();\r\n    }\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n    return(\r\n        <div className={s.columngal}>\r\n            <div>\r\n                {editMode ? <ProfileDataFormField initialValues={props.profile}{...props} onSubmit={onSubmit}/> :\r\n                    <ProfileData goToEditMode={() => {setEditMode(true)}}  {...props}/>}\r\n            </div>\r\n            <div>\r\n                <textarea ref={NewPicture}\r\n                          onChange={onGalChange}\r\n                          value={props.BlockPost}\r\n                          validata={[required,maxLength25]}>choose picture</textarea>\r\n                <button onClick={addPicture} >add</button>\r\n            </div>\r\n            {GalleryImg}\r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = (props) => {\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return(\r\n        <div className={s.columngal}>\r\n            {props.isOwner && <div><button onClick={props.goToEditMode}>Edit</button></div>}\r\n            <div>\r\n                <img src={props.profile.photos.large || userPhoto}/>\r\n                {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n            </div>\r\n            <div className={s.title}>\r\n                <b>Full name</b>: {props.profile.fullName}\r\n            </div>\r\n            <div className={s.title}>\r\n                <b>Looking for job </b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            <div>\r\n                {props.profile.lookingForAJob &&\r\n                <div className={s.title}>\r\n                    <b>\r\n                        My skills:\r\n                    </b>\r\n                    {props.profile.lookingForAJobDescription}\r\n                </div>\r\n                }\r\n            </div>\r\n            <div className={s.title}>\r\n                <b>About me </b>: {props.profile.aboutMe}\r\n            </div>\r\n            <ProfileStatusHook setUserStatus={props.setUserStatus} status={\"Hello\"}/>\r\n            <div className={s.title}>\r\n                <b>Contacts</b>: {Object.keys(props.profile.contacts).map(\r\n                key =>{\r\n                    return <Contacts contactTitle={key} key={key}\r\n                                     contactValue={props.profile.contacts[key]}/>\r\n                }\r\n            )}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst Contacts = ({contactTitle,contactValue}) => {\r\n    return<div className={s.title}>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}\r\n\r\nconst GalleryPost = (props) => {\r\n    return(\r\n        <div className={s.columngal}>\r\n            <div>\r\n                <img src={props.sr} alt='aaaaaaaaaaaa'/>\r\n                <img src='https://sun9-39.userapi.com/cLfRr5r8qAegXK0iJE8wQ1oxwoIeIqjTHaz4WQ/8ItJwatmRkc.jpg'/>\r\n                <img src='https://sun9-39.userapi.com/cLfRr5r8qAegXK0iJE8wQ1oxwoIeIqjTHaz4WQ/8ItJwatmRkc.jpg'/>\r\n            </div>\r\n            {props.sr}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Gallery","import React from 'react';\r\nimport {\r\n    AddImgToGallery,\r\n    OnSrcPostChange,\r\n    getUserProfile,\r\n    savePhoto,\r\n    saveProfile,\r\n    setUserStatus, getUserStatus\r\n} from \"../../Redux/Galerey_reducer.ts\";\r\nimport Gallery from \"./Gallery\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass galleryContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n        this.props.setUserStatus()\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Gallery GalleryPage={this.props.GalleryPage} BlockPost={this.props.BlockPost}\r\n                     profile={this.props.GalleryPage.profile} {...this.props} auth={this.props.auth}\r\n                     isOwner={!this.props.match.params.userId} savePhoto={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile} isAuth={this.props.isAuth} status={this.props.status}\r\n                     updateImgURL={OnSrcPostChange} addPicture={AddImgToGallery}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        GalleryPage: state.GalleryPage,\r\n        BlockPost: state.GalleryPage.BlockPost,\r\n        profile: state.GalleryPage.profile,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.GalleryPage.status\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, OnSrcPostChange, AddImgToGallery, savePhoto, saveProfile, setUserStatus, getUserStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(galleryContainer)"],"sourceRoot":""}